#include atoms_red
#include saprc99_mosaic_8bin_vbs2_aq_halogens.spc
#include saprc99_mosaic_8bin_vbs2_aq_halogens.eqn



#INLINE F90_RATES
!__________________________________________________

    REAL(KIND=dp) FUNCTION Keff ( A0,B0,C0, TEMP,X1,X2,y1,y2 )
    REAL(KIND=dp),INTENT(IN) :: X1,X2,y1,y2
    REAL(KIND=dp),INTENT(IN) :: TEMP
    REAL(KIND=dp),INTENT(IN):: A0,B0,C0
    Keff = A0 * EXP(- B0 /TEMP ) &
      *(TEMP/300._dp)**C0*(y1*X1/(X1 + X2 + 1.0e-35) &
       +y2*(1-X1/(X1 + X2 + 1.0e-35)))
    END FUNCTION Keff
!__________________________________________________

    REAL(KIND=dp) FUNCTION Keff2 ( C0,X1,X2,y1,y2 )
    REAL(KIND=dp),INTENT(IN) :: X1,X2,y1,y2
    REAL(KIND=dp),INTENT(IN):: C0
    Keff2 = C0*(y1*X1/(X1 + X2 + 1.0e-35) &
       +y2*(1-X1/(X1 + X2 + 1.0e-35 )))
    END FUNCTION Keff2
!__________________________________________________


!LMarelle: from MOZART, for DMS
REAL(KIND=dp) FUNCTION usr24( temp, c_m )

    REAL(KIND=dp), INTENT(IN) :: temp
    REAL(KIND=dp), INTENT(IN) :: c_m

    REAL(KIND=dp) :: ko, wrk

    wrk   = .21_dp*c_m
    ko    = 1._dp + 5.5e-31_dp*exp( 7460._dp/temp )*wrk
    usr24 = 1.7e-42_dp*exp( 7810._dp/temp )*wrk/ko

END FUNCTION usr24
!__________________________________________________

REAL(KIND=dp) FUNCTION  RACM_THERMAL(temp, A0, B0)
!LMarelle: from PACT-1d
!////   RACM2 reaction rates have the form K = A * exp(-B / T)
!// for example - for the reaction: HO+O3 -> O2 + O2 
!// rate_constant = 1.70 x 10-12 exp(-940/T)
!// A0 = 1.70 x 10-12
!// B0 = 940
  REAL(KIND=dp), INTENT(IN) :: temp
  REAL(KIND=dp), INTENT(IN) :: A0
  REAL(KIND=dp), INTENT(IN) :: B0

  RACM_THERMAL = (A0) * exp(-(B0)/temp)

END FUNCTION RACM_THERMAL
!__________________________________________________

REAL(KIND=dp) FUNCTION  RACM_HG(temp, c_m, A0, B0, C0)
!SAhmed: Shah et al. (2021)
  REAL(KIND=dp), INTENT(IN) :: temp
  REAL(KIND=dp), INTENT(IN) :: c_m
  REAL(KIND=dp), INTENT(IN) :: A0
  REAL(KIND=dp), INTENT(IN) :: B0
  REAL(KIND=dp), INTENT(IN) :: C0

  RACM_HG = (A0) * exp(-(B0)/temp) * (temp/298._dp)**(-C0) * c_m

END FUNCTION RACM_HG
!__________________________________________________

REAL(KIND=dp) FUNCTION  RACM_HGCl(temp, c_m, A0, B0)
!SAhmed: Donohoue et al. (2005)
  REAL(KIND=dp), INTENT(IN) :: temp
  REAL(KIND=dp), INTENT(IN) :: c_m
  REAL(KIND=dp), INTENT(IN) :: A0
  REAL(KIND=dp), INTENT(IN) :: B0

  RACM_HGCl = (A0) * exp((B0) * ((1._dp/temp) - (1._dp/298._dp))) * c_m

END FUNCTION RACM_HGCl
!__________________________________________________

REAL(KIND=dp) FUNCTION RACM_TROE(temp,c_m,K0,N,KINF,M)
!LMarelle: from PACT-1d
!//Following the definition in the NASA JPL data eval 2011, section 2.1
!//The rate constant is given by  k_f([M],T)
!//k_0_T = K0 * (T/300.)**(-N)
!//k_inf_T = KINF * (T/300.)**(-M)
!//FACTOR = [1+(log10(k_0_T AIR_CONC/k_inf_T))**2]**(-1)
!//rate_constant = (k_0_T AIR_CONC )/ (1 + (k_0_T AIR_CONC/k_inf_T) ) * 0.6**(FACTOR)
  REAL(KIND=dp), INTENT(IN) :: temp
  REAL(KIND=dp), INTENT(IN) :: c_m
  REAL(KIND=dp), INTENT(IN) :: K0
  REAL(KIND=dp), INTENT(IN) :: N
  REAL(KIND=dp), INTENT(IN) :: KINF
  REAL(KIND=dp), INTENT(IN) :: M
  REAL(KIND=dp)             :: k_0_T, k_inf_T, FACTOR

  INTRINSIC LOG10

  k_0_T   = K0 * (temp/300._dp)**(-N)
  k_inf_T = KINF * (temp/300._dp)**(-M)
  FACTOR = ( 1._dp + ( log10( k_0_T*c_m/k_inf_T ) )**2._dp )**(-1._dp)
  RACM_TROE = (k_0_T*c_m)/(1._dp+(k_0_T*c_m/k_inf_T)) * 0.6_dp**(FACTOR) 

END FUNCTION RACM_TROE
!__________________________________________________

!LMarelle: add these surface reaction rates as placeholders, in the end they
! should be passed from WRF-Chem to KPP
REAL(KIND=dp) FUNCTION surface_reaction_rates(ii)
  INTEGER, INTENT(IN) :: ii
  surface_reaction_rates = 0._dp

END FUNCTION surface_reaction_rates

!----------------
!LMarelle Reaction rate for the "uptaken gaseous species + halogen in aerosol"
! heterogeneous reaction, e.g. N2O5 + Br_aer = BrNO2 + HNO3
! The uptake of the gas (e.g. N2O5) on the aerosol containing halogens (e.g.
! Br_aer) needs to consume Br_aer, but the reaction rate should not depend on 
! the concentration of Br_aer. We achieve this by writing the reaction as 
! N2O5 + HBr = BrNO2 + HNO3 (Using HBr as a proxy for Br_aer) and dividing
! the reaction rate by [HBr]
REAL(KIND=dp) FUNCTION khet_halogens_aer(k_uptake_gas, C_halogen_aer, & 
                                         C_uptake_gas)
  REAL(KIND=dp),INTENT(IN) :: k_uptake_gas, C_halogen_aer, C_uptake_gas
  ! - k_uptake_gas, uptake rate of species "uptake_gas" on aerosols, 
  !   from WRF-Chem (KPP units)
  ! - C_halogen_aer, air concentration of aerosol-borne halogen (e.g. 
  !   Br_aer) (KPP units)
  ! - C_uptake_gas, air concentration of uptaken gas (e.g. N2O5) (KPP units)
  ! - This routine returns the reaction rate khet_halogens_aer (KPP units)
  !   for the reaction uptake_gas + halogen_aer, independent on the 
  ! concentration of halogen_aer.

  ! If the concentrations are too low, just return a rate of 0.0 
  khet_halogens_aer = 0._dp
  ! In the other case, normalize the rate by the C_halogen_aer
  ! concentration
  IF (min(C_halogen_aer, C_uptake_gas) .GT. 1._dp) THEN
    khet_halogens_aer = k_uptake_gas / C_halogen_aer
  END IF

END FUNCTION khet_halogens_aer

!----------------
!LMarelle: add these photolysis rates as placeholders, in the end they
! should be passed from WRF-Chem to KPP
REAL(KIND=dp) FUNCTION jrates(p_specname)
  character(len = *), INTENT(IN) :: p_specname
  jrates = 0._dp

END FUNCTION jrates

#ENDINLINE



